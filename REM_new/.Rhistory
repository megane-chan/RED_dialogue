}
df_2103[, "gender"] = 0
if (df_2103$speaker == c("Ashley", "Katya", "Vika")){
df_2103$gender = 1
}
df_2103[, "gender"] = 0
if (df_2103$speaker %in% c("Ashley", "Katya", "Vika")){
df_2103$gender = 1
}
df_2103[, "gender"] = 0
if (df_2103$speaker %in% list("Ashley", "Katya", "Vika")){
df_2103$gender = 1
}
df_2103[, "gender"] = 0
if (df_2103$speaker == list("Ashley", "Katya", "Vika")){
df_2103$gender = 1
}
df_2103[, "gender"] = 0
if (df_2103$speaker == "Ashley")){
df_2103[, "gender"] = 0
# , "Katya", "Vika"
if (df_2103$speaker == "Ashley"){
df_2103$gender = 1
}
# , "Katya", "Vika"
df$gender[df_2103$speaker == "Ashley"] ==1
df$gender[df_2103$speaker == "Ashley"]
df_2103$speaker == "Ashley"
df[df_2103$speaker == "Ashley"] ==1
df[, df_2103$speaker == "Ashley"]
df_2103$speaker == "Ashley"
df[df_2103$speaker == "Ashley"]
df[df_2103$speaker == "Ashley",]
df_2103[, df_2103$speaker == "Ashley"]
df_2103[df_2103$speaker == "Ashley"]
df_2103$speaker
df_2103[df_2103$speaker == "Ashley"]
df_2103[,df_2103$speaker == "Ashley"]
df_2103[:, df_2103$speaker == "Ashley"]
df_2103[,df_2103$speaker == "Ashley"]
df_2103[df_2103$speaker == "Ashley",]
df_2103$gender[df_2103$speaker == "Ashley",] =1
df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika")]
df_2103[, "gender"] = 0
# , "Katya", "Vika"
df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika")]
df_2103$speaker
df_2103[df_2103$speaker == "Ashley"]
df_2103[df_2103$speaker == "Ashley"]
df_2103[, "gender"] = 0
# , "Katya", "Vika"
df_2103[df_2103$speaker == "Ashley"]
df_2103[, "gender"] = 0
# , "Katya", "Vika"
df_2103[df_2103$speaker == "Ashley",]
df_2103[, "gender"] = 0
# , "Katya", "Vika"
df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika"), ]
df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika"), ]
df_2103[, "gender"] = 0
# , "Katya", "Vika"
df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika"), ] %>% mutate(.$gender = 1)
df_2103[, "gender"] = 0
# , "Katya", "Vika"
df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika"), ] %>% mutate(df_2103$gender = 1)
df_2103[, "gender"] = 0
# , "Katya", "Vika"
df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika"), ] %>% transform(df_2103$gender = 1)
df_2103[, "gender"] = 0
# , "Katya", "Vika"
df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika"), ] %>% .$gender = 1
df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika"), ]
temp <- df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika"), ]
temp$gender = 1
temp
# Last Updated: 02/12
rm(list = ls())
# Load libraries
library(rstudioapi)
library(tidyverse)
library(tidyr)
library(RColorBrewer)
library(dplyr)
library(igraph)
library(readxl)
library(igraph)
library(glmnet)
library(remsonic)
library(dplyr)
library(relevent)
# Set Path
setwd("~/RProjects/SNA_REM/REM_new/")
#session_dfs %>%  saveRDS(file = "all_sessions.RData")
df_2103 <- readRDS("data/nek21_data.RData") %>%
.[["df_2103"]] %>%
select(-session) %>%
rename("dialog_act" = "outcome")
#df_2103 %>% glimpse()
df_2103$speaker %>% unique()
df_2103[which(df_2103$speaker == "All"),]
df_2103[which(df_2103$content == "[UI]"),]
# Remove rows where speaker name is likely an error
df_2103 <- df_2103[!df_2103$speaker %in% c("Ashley and Saleh", "All"),]
# Correct speaker names
name_corrections <- c("Will:" = "Will",
"Saleh:" = "Saleh",
"Salah" = "Saleh")
df_2103$speaker <- ifelse(df_2103$speaker %in% names(name_corrections),
name_corrections[df_2103$speaker],
df_2103$speaker)
unique_speakers <- df_2103$speaker %>% unique()
unique_speakers
df_2103[, "gender"] = 0
# , "Katya", "Vika"
temp <- df_2103[df_2103$speaker %in% c("Ashley","Katya", "Vika"), ]
temp$gender = 1
temp
# add  vertices based on speakers' names
network_2103 <- graph.empty()
for (speaker in unique_speakers) {
network_2103 <- add_vertices(network_2103, 1, name = speaker)
}
par(mfrow = c(1, 1), mar = c(1, 1, 1, 1))
# add  vertices based on speakers' names
network_2103 <- graph.empty()
for (speaker in unique_speakers) {
network_2103 <- add_vertices(network_2103, 1, name = speaker)
}
for (i in 1:(nrow(network_2103) - 1)) {
if (network_2103$speaker[i] %in%
V(network_2103)$name && network_2103$speaker[i + 1] %in% V(network_2103)$name) {
network_2103 <- add_edges(network_2103, c(which(V(network_2103)$name == network_2103$speaker[i]),
which(V(network_2103)$name == network_2103$speaker[i + 1])))
}
}
par(mfrow = c(1, 1), mar = c(1, 1, 1, 1))
# add  vertices based on speakers' names
network_2103 <- graph.empty()
for (speaker in unique_speakers) {
network_2103 <- add_vertices(network_2103, 1, name = speaker)
}
for (i in 1:(nrow(network_2103) - 1)) {
if (network_2103$speaker[i] %in%
V(network_2103)$name && network_2103$speaker[i + 1] %in% V(network_2103)$name) {
network_2103 <- add_edges(network_2103, c(which(V(network_2103)$name == network_2103$speaker[i]),
which(V(network_2103)$name == network_2103$speaker[i + 1])))
}
}
par(mfrow = c(1,1), mar = c(1, 1, 1, 1))
legend <- unique(graph_1903[,5])
#session_dfs %>%  saveRDS(file = "all_sessions.RData")
df_2103 <- readRDS("data/nek21_data.RData") %>%
.[["df_2103"]] %>%
select(-session) %>%
rename("dialog_act" = "outcome")
#df_2103 %>% glimpse()
df_2103$speaker %>% unique()
# Last Updated: 02/12
rm(list = ls())
# Load libraries
library(rstudioapi)
library(tidyverse)
library(tidyr)
library(RColorBrewer)
library(dplyr)
library(igraph)
library(readxl)
library(igraph)
library(glmnet)
library(remsonic)
library(dplyr)
library(relevent)
# Set Path
setwd("~/RProjects/SNA_REM/REM_new/")
# Set Path
setwd("~/RProjects/RED_dialogue/REM")
trans <- read.csv("data/trans.csv")
pred <- read.csv("data/trans_preds.csv")
perf <- read.csv("data/perfs.csv")
# Last Updated: 02/12/24
rm(list = ls())
# Load libraries
library(rstudioapi)
library(tidyverse)
library(tidyr)
library(dplyr)
library(igraph)
# Set Path
setwd("~/RProjects/SNA_REM")
trans <- read.csv("data/trans.csv")
pred <- read.csv("data/trans_preds.csv")
perf <- read.csv("data/perfs.csv")
# Set Path
setwd("~/RProjects/SNA_REM")
trans <- read.csv("data/trans.csv")
pred <- read.csv("data/trans_preds.csv")
# Set Path
setwd("~/RProjects/SNA_REM/REM_new/")
trans <- read.csv("data/trans.csv")
pred <- read.csv("data/trans_preds.csv")
perf <- read.csv("data/perfs.csv")
perf
df <- cbind(trans, pred) %>%
df <- cbind(trans, pred) %>%
select(-X) %>%
rename("outcome" = "BC_Trans_Preds")
df %>% glimpse()
df <- cbind(trans, pred) %>%
select(-X) %>%
<- cbind(trans, pred) %>%
df <- cbind(trans, pred) %>%
select(-X) %>%
rename("outcome" = "BC_Trans_Preds")
df
df %>% glimpse()
df <- cbind(trans, pred) %>% left_join(perf, by = "session") %>%
select(-X) %>%
rename("outcome" = "BC_Trans_Preds")
df %>% glimpse()
cbind(trans, pred) %>% left_join(perf, by = "session") %>%
select(-X) %>%
rename("outcome" = "BC_Trans_Preds")
View(perf)
View(trans)
View(pred)
View(perf)
# Set Path
setwd("~/RProjects/SNA_REM/REM_new/")
trans <- read.csv("data/trans.csv")
pred <- read.csv("data/trans_preds.csv")
perf <- read.csv("data/perfs.csv")
df <- cbind(trans, pred) %>% left_join(perf, by = "session") %>%
select(-X) %>%
rename("outcome" = "BC_Trans_Preds")
df <- cbind(trans, pred) %>% left_join(perf, by = "session") %>%
rename("outcome" = "BC_Trans_Preds")
df %>% glimpse()
cbind(trans, pred) %>% left_join(perf, by = "session", keep = FALSE) %>%
rename("outcome" = "BC_Trans_Preds")
perf <- read.csv("data/perfs.csv")
perf
perf
cbind(trans, pred) %>% left_join(perf, by = "session", keep = FALSE)
cbind(trans, pred) %>% right_join(perf, by = "session", keep = FALSE, ) %>%
rename("outcome" = "BC_Trans_Preds")
df <- cbind(trans, pred) %>%
rename("outcome" = "BC_Trans_Preds")
df <- cbind(trans, pred) %>%
rename("outcome" = "BC_Trans_Preds")
cbind(trans, pred) %>%
rename("outcome" = "BC_Trans_Preds")
# Last Updated: 02/12
rm(list = ls())
# Load libraries
library(rstudioapi)
library(tidyverse)
library(tidyr)
library(RColorBrewer)
library(dplyr)
library(igraph)
library(readxl)
library(igraph)
library(glmnet)
library(remsonic)
library(dplyr)
library(relevent)
# Set Path
setwd("~/RProjects/SNA_REM/REM_new/")
#session_dfs %>%  saveRDS(file = "all_sessions.RData")
df_2103 <- readRDS("data/nek21_data.RData") %>%
.[["df_2103"]]
#df_2103 %>% glimpse()
df_2103$speaker %>% unique()
#session_dfs %>%  saveRDS(file = "all_sessions.RData")
df_2103 <- readRDS("data/nek21_data.RData") %>%
.[["df_2103"]]
head(df_2103)
df_2103[which(df_2103$content == "[UI]"),]
which(df_2103$content == "[UI]")
df_2103$content
head(df_1903[grepl("[UI]", df_1903$content),])
df_2103[grepl("[UI]", df_1903$content),]
df_2103[grepl("[UI]", df_2103$content),]
df_2103[which(df_2103$content == " [UI]"),]
#session_dfs %>%  saveRDS(file = "all_sessions.RData")
readRDS("data/nek21_data.RData")
#session_dfs %>%  saveRDS(file = "all_sessions.RData")
readRDS("data/all_sessions.RData") %>% names()
library(readr)
perfs <- read_csv("data/perfs.csv", col_types = cols(...1 = col_integer(),
session = col_integer()))
View(perfs)
View(perfs)
library(readr)
perfs_21 <- read_csv("data/perfs.csv", skip = 8)
View(perfs_21)
#session_dfs %>%  saveRDS(file = "all_sessions.RData")
readRDS("data/all_sessions.RData") %>% names()
#session_dfs %>%  saveRDS(file = "all_sessions.RData")
readRDS("data/all_sessions.RData") %>% names()
read_csv("data/perfs.csv", skip = 8)
read.csv("data/perfs.csv", skip = 8)
perfs_21 <- read_csv("data/perfs.csv", skip = 8)
read_csv("data/perfs.csv", skip = 8, show_col_types = FALSE)
read.csv("data/perfs.csv", skip = 8, show_col_types = FALSE)
read.csv("data/perfs.csv", skip = 8)
perfs_21 <- read.csv("data/perfs.csv", header=TRUE, skip = 8)
perfs_21
library(readr)
perfs <- read_csv("data/perfs.csv", skip = 8)
View(perfs)
read.csv("data/perfs_21.csv", header=TRUE, skip = 8)
read.csv("data/perfs_21.csv", header=TRUE)
read.csv("data/perfs_21.csv", header=TRUE)
readRDS("data/all_sessions.RData") %>% .c("df_2103": "df_2103")
#session_dfs %>%  saveRDS(file = "all_sessions.RData")
readRDS("data/all_sessions.RData") %>% list("df_2103": "df_2103")
#session_dfs %>%  saveRDS(file = "all_sessions.RData")
readRDS("data/all_sessions.RData") %>% c("df_2103": "df_2103")
# read performance
read_csv("data/perfs_21.csv", header=TRUE)
read_csv("data/perfs_21.csv", header=TRUE)
# Last Updated: 02/12
rm(list = ls())
# Load libraries
library(rstudioapi)
library(tidyverse)
library(tidyr)
library(RColorBrewer)
library(dplyr)
library(igraph)
library(readxl)
library(igraph)
library(glmnet)
library(remsonic)
library(dplyr)
library(relevent)
# Set Path
setwd("~/RProjects/SNA_REM/REM_new/")
# read performance
read_csv("data/perfs_21.csv", header=TRUE)
# read performance
read_csv("data/perfs_21.csv")
# read performance
data <- read_csv("data/perfs_21.csv")
# Sort by performance in descending order
data_sorted <- data[order(-data$perf), ]
# Add a column to label high and low performance
data_sorted <- mutate(data_sorted, performance_label = ifelse(row_number() <= n()/2, 'high-performance', 'low-performance'))
# Print the updated dataframe
print(data_sorted)
# read performance
data <- read_csv("data/perfs_21.csv")
# Sort by performance in descending order
data_sorted <- data[order(-data$perf), ]
# Add a column to label high and low performance
data_sorted <- mutate(data_sorted, performance_level = ifelse(row_number() <= n()/2, 1, 0))
# Print the updated dataframe
print(data_sorted)
# Sort by performance in descending order
data_sorted <- data[order(-data$perf), ]
# Add a column to label high and low performance
data_sorted <- mutate(data_sorted, performance_level = ifelse(row_number() <= n()/2, 1, 0))
data_sorted$session <- rownames(data_sorted)
# Reorder the columns to have 'session' first, if desired
data_sorted <- data_sorted[, c('session', 'perf', 'performance_label')]
# Last Updated: 02/12
rm(list = ls())
# Last Updated: 02/12
rm(list = ls())
# Load libraries
library(rstudioapi)
library(tidyverse)
library(tidyr)
library(RColorBrewer)
library(dplyr)
library(igraph)
library(readxl)
library(igraph)
library(glmnet)
library(remsonic)
library(dplyr)
library(relevent)
# Set Path
setwd("~/RProjects/SNA_REM/REM_new/")
# read performance
data <- read_csv("data/perfs_21.csv")
# read performance
data <- read_csv("data/perfs_21.csv")
# Sort by performance in descending order
data_sorted <- data[order(-data$perf), ]
# Add a column to label high and low performance
data_sorted <- mutate(data_sorted, perf_level = ifelse(row_number() <= n()/2, 1, 0))
data_sorted$session <- rownames(data_sorted)
# Reorder the columns to have 'session' first, if desired
data_sorted <- data_sorted[, c('session', 'perf', 'perf_level')]
print(data_sorted)
# read performance
data <- read_csv("data/perfs_21.csv")
# read performance
data <- read_csv("data/perfs_21.csv")
data_sorted$session
data$session
# read performance
data <- read_csv("data/perfs_21.csv")
as.character(data$session)
# read performance
data <- read_csv("data/perfs_21.csv")
data
rownames(data) <- as.character(data$session)
data$session <- NULL  # Remove the 'session' column as it is now the index
data$session <- NULL  # Remove the 'session' column as it is now the index
data$session <- NULL
data[order(-data$perf), ]
data_sorted <- data[order(-data$perf), ]
data_sorted
# Last Updated: 02/12
rm(list = ls())
# Load libraries
library(rstudioapi)
library(tidyverse)
library(tidyr)
library(RColorBrewer)
library(dplyr)
library(igraph)
library(readxl)
library(igraph)
library(glmnet)
library(remsonic)
library(dplyr)
library(relevent)
# Set Path
setwd("~/RProjects/SNA_REM/REM_new/")
# read performance
data <- read_csv("data/perfs_21.csv")
rownames(data) <- as.character(data$session)
data
data$session
rownames(data) <- as.character(data$session)
rownames(data)
data
# read performance
data <- read_csv("data/perfs_21.csv")
data_sorted <- data[order(-data$perf), ]
data_sorted
# Add a column to label high and low performance
data_sorted <- mutate(data_sorted, perf_level = ifelse(row_number() <= n()/2, 'high', 'low'))
# Add a column to label high and low performance
data_sorted <- mutate(data_sorted, perf_level = ifelse(row_number() <= n()/2, '1, 0))
data_sorted <- data[order(-data$perf), ]
# Add a column to label high and low performance
data_sorted <- mutate(data_sorted, perf_level = ifelse(row_number() <= n()/2, 1, 0))
data_sorted
# read performance
data <- read_csv("data/perfs_21.csv")
data_sorted <- data[order(-data$perf), ]
data_sorted
# Last Updated: 02/12
rm(list = ls())
# Load libraries
library(rstudioapi)
library(tidyverse)
library(tidyr)
library(RColorBrewer)
library(dplyr)
library(igraph)
library(readxl)
library(igraph)
library(glmnet)
library(remsonic)
library(dplyr)
library(relevent)
# Set Path
setwd("~/RProjects/SNA_REM/REM_new/")
# Last Updated: 02/12
rm(list = ls())
read_csv("data/perfs_21.csv")
# Last Updated: 02/12
rm(list = ls())
# Last Updated: 02/12
rm(list = ls())
read_csv("data/perfs_21.csv")
# read performance
data <- read_csv("data/perfs_21.csv")
data_sorted <- data[order(-data$perf), ]
# Add a column to label high and low performance
data_sorted <- mutate(data_sorted, perf_level = ifelse(row_number() <= n()/2, 1, 0))
data_sorted <- data_sorted[, c('session', 'perf', 'perf_level')]
data_sorted
data_sorted
data_sorted <- data_sorted %>% sort_by("session")
data_sorted <- data_sorted %>% sort("session")
data_sorted <- data_sorted %>% sort()
data_sorted
readRDS("data/trans_preds.csv")
# Last Updated: 02/12
rm(list = ls())
# Load libraries
library(rstudioapi)
library(tidyverse)
library(tidyr)
library(RColorBrewer)
library(dplyr)
library(igraph)
library(readxl)
library(igraph)
library(glmnet)
library(remsonic)
library(dplyr)
library(relevent)
# Set Path
setwd("~/RProjects/SNA_REM/REM_new/")
